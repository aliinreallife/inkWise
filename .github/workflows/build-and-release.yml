name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Step 3: Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 5: Build executable
      - name: Build executable
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --onefile --add-data "wolf.ico;." --add-data "main.py;." --hidden-import="streamlit" --name "inkWise" launcher.py
          else
            pyinstaller --onefile --add-data "wolf.ico:." --add-data "main.py:." --hidden-import="streamlit" --name "inkWise" launcher.py
          fi
        shell: bash

      # Step 6: Debug build output
      - name: Debug build output
        run: ls -R dist

      # Step 7: Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: inkWise-${{ matrix.os }}
          path: dist/inkWise*
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Fetch tags and check if tag exists
      - name: Check if tag exists
        run: |
          git fetch --tags
          if git rev-parse "refs/tags/${{ github.ref_name }}" >/dev/null 2>&1; then
            echo "Tag already exists. Proceeding to update release."
          else
            echo "Tag does not exist. Creating tag."
            git tag ${{ github.ref_name }}
            git push origin ${{ github.ref_name }}
          fi

      # Step 3: Download artifacts
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: inkWise-${{ matrix.os }}
          path: dist/

      # Step 4: Debug downloaded artifacts
      - name: Debug downloaded artifacts
        run: ls -R dist/

      # Step 5: Create or update release
      - name: Create or Update Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/**/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          allowUpdates: true
